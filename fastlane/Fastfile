# sh("bundle install")
platform :android do
  desc "Build/Generate/Deploy on Google Play"
  lane :deploy do
    # Get current Android build
    current_build = google_play_track_version_codes(track: "internal")[0]
    # Increment current build
    ChangeOnFile('../android/app/build.gradle', /versionCode #{current_build}/, "versionCode " + (current_build + 1).to_s)
    # Install packages
    sh("npm i -s")
    # Sync app
    sh("cd ..; npx ionic cap sync android")
    # Build/Generate/Sign .aab
    gradle(
      project_dir: "android",
      task: "clean bundle",
      build_type: "Release",
      properties: {
        "android.injected.signing.store.file" => File.expand_path("keystore.json"),
        "android.injected.signing.store.password" => "123456",
        "android.injected.signing.key.alias" => "key0",
        "android.injected.signing.key.password" => "123456"
      }
    )
    upload_to_play_store(
      aab: lane_context[SharedValues::GRADLE_AAB_OUTPUT_PATH],
      track: "internal"
    )
  end
end

# Find and replace text in file
def ChangeOnFile(file, regex, value)
  text = File.read file
  File.open(file, "w+") { |f| f << text.gsub(regex, value) }
end

platform :ios do
  desc "Build/Generate/Deploy on Apple store"
  lane :deploy do
    # Load the App Store Connect API token to use in other fastlane tools and actions
    # api_key = app_store_connect_api_key(
    #   key_id: authkey_id,
    #   issuer_id: "xxxx",
    #   key_filepath: confidential_path + "AuthKey_" + authkey_id + ".p8",
    #   duration: 1200,
    #   in_house: false,
    # )
    # sigh(
    #   app_identifier: app_id,
    #   api_key: api_key,
    #   output_path: confidential_path,
    # )
    # install_provisioning_profile(
    #   path: confidential_path + "AppStore_" + app_id + ".mobileprovision"
    # )
    # update_code_signing_settings(
    #   use_automatic_signing: false,
    #   path: "ios/App/App.xcodeproj",
    #   bundle_identifier: app_id,
    #   profile_name: confidential_path + "AppStore_" + app_id + ".mobileprovision",
    # )
    # update_project_provisioning(
    #   xcodeproj: "ios/App/App.xcodeproj",
    # )
    gym
    # upload_to_testflight(
    #   ipa: "ios/build/" + app_name + ".ipa",
    # )
  end
end
